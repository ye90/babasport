<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
     http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
     http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
     http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
     http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

	<!-- Memcached 配置 -->
	<bean id="memCachedClient" class="com.danga.MemCached.MemCachedClient">
		<constructor-arg>
			<value>sockIOPool</value>
		</constructor-arg>
	</bean>
	<!-- Memcached连接池 -->
	<bean id="sockIOPool" class="com.danga.MemCached.SockIOPool" factory-method="getInstance" init-method="initialize" destroy-method="shutDown">
		<constructor-arg>
			<value>sockIOPool</value>
		</constructor-arg>
		<property name="servers">
			<list>
				<value>192.168.190.131:11211</value>
			</list>
		</property>
		<property name="weights">
			<list>
				<value>1</value>
			</list>
		</property>
	</bean>
	
	
	<!-- Session实例化（本服务器） -->
	<!-- <bean id="sessionProvider" class="ye.common.web.session.HttpSessionProvider" /> -->
	<!-- Session实例化（分布式） -->
	<bean id="sessionProvider" class="ye.common.web.session.CacheSessionProvider" >
		<property name="expiry" value="60"></property>
	</bean>
	
	<!-- 切面对象 -->
	<bean id="cacheInterceptor" class="ye.common.web.aop.CacheInterceptor">
		<property name="expiry" value="4200000"/>
	</bean>
	
	<!-- Spring  Aop 配置   get* 配置环绕 -->
	<aop:config>
		<!-- 面 -->
		<aop:aspect ref="cacheInterceptor">
			<!-- 点 -->
			<aop:around method="doAround" pointcut="execution(* ye.core.service.*.*.get*(..))"/>
			<!-- 变更  -->
			<aop:after method="doAfter" pointcut="execution(* ye.core.service.*.*.update*(..))"/>
			<aop:after method="doAfter" pointcut="execution(* ye.core.service.*.*.add*(..))"/>
			<aop:after method="doAfter" pointcut="execution(* ye.core.service.*.*.delete*(..))"/>
		</aop:aspect>
	</aop:config>
</beans>
